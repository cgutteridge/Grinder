#!/usr/bin/perl -I perl_lib/

# License: GPL
# Copyright: University of Southampton 2011,2012
# Author: Christopher Gutteridge; http://id.ecs.soton.ac.uk/person/1248

use strict;
use warnings;

my $in = $ARGV[0];
my $format = "xls";
if( $in=~m/\.xlsx$/ ) { $format = "xlsx"; }

my $workbook;

if( $format eq "xlsx" )
{
	if( ! eval 'use Spreadsheet::XLSX; 1;' ) 
	{
		error( "Failed to load Perl Module: Spreadsheet::XLSX: $@" );
	}	
	if( ! eval 'use Text::Iconv; 1;' ) 
	{
		error( "Failed to load Perl Module: Text::Iconv: $@" );
	}	
 	my $converter = Text::Iconv -> new ("utf-8", "windows-1251");
	
	no warnings; 
	$workbook = Spreadsheet::XLSX->new( $in, $converter );
	use warnings; 
	if ( !defined $workbook ) 
	{
		error( "Failed to parse XLSX file $in." );
	}
}
else
{
	if( ! eval 'use Spreadsheet::ParseExcel; 1;' ) 
	{
		error( "Failed to load Perl Module: Spreadsheet::ParseExcel: $@" );
	}	
	my $parser = Spreadsheet::ParseExcel->new();
	$workbook = $parser->parse( $in );
	if ( !defined $workbook ) 
	{
		die "Failed to parse Excel file: ".$parser->error();
	}
}

my @worksheets = $workbook->worksheets();
for( my $i=0;$i<scalar @worksheets;++$i )
{
	my $worksheet = $worksheets[$i];	
	my $fn= "$in.".($i+1).".csv";
	open( OUT, ">$fn") || die "Can't write $fn: $!";
	my ( $row_min, $row_max ) = $worksheet->row_range();
	my ( $col_min, $col_max ) = $worksheet->col_range();
	
	for my $row ( 0 .. $row_max ) 
	{
		my @cells = ();
		for my $col ( 0 .. $col_max ) 
		{
			my $cell = $worksheet->get_cell( $row, $col );
			my $v;
			if( $cell ) { $v =  $cell->value; }
			$v="" if !defined $v;
			$v=~s/"/""/g;
			push @cells, '"'.$v.'"';
		}
		print OUT join(",",@cells)."\n";
	}

	close OUT;
}
exit;

sub error
{
	my( $msg ) = @_;

	print STDERR "$msg\n";
	exit 1;
}
