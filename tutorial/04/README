Added to Config:

process: people:email=mbox_sha1sum

Added to XSL:

          <xsl:if test='people:email/text()'>
             <foaf:mbox rdf:resource='mailto:{people:email}' />
             <foaf:mbox_sha1sum><xsl:value-of select='people:email/@mbox_sha1sum' /></foaf:mbox_sha1sum>
          </xsl:if>

----------------------------------------------------------------------

In this example we introduce a processing option. These are a way to 
pre-process the data in ways useful to RDF+XML conversion.

In this case we're using mbox_sha1sum which converts takes the value,
appends "mailto:" to the front and applies a SHA1 hashing function.
Why? So we can use it as specified here:
http://xmlns.com/foaf/spec/#term_mbox_sha1sum

The process configuration option adds attributes to the XML tag
passed to XSLT, for this field. eg.

<people:email mbox_sha1sum='a89b863c45f9764fb4cbf2cd5d4b7f0702cb9d13'>marvin@totl.net</people:email>

To get at the value of this attribute in xslt use people:email/@mbox_sha1sum

We use another <xsl:if> to check that this person actually has an
email, and if they do, we create two triples.

Tags Available:

tag
  Convert the value to CamelCaps and remove all non-alphanumerics (except not - or _) so:
   "Don't you want me"  or  "Test_hello-world abc"
  gives a tag of
   "DonTYouWantMe"      or  "Test_Hello-WorldAbc"
  
md5
  gives an MD5 sum of the value
sha1
  gives a SHA1 sum of the value
mbox_sha1sum
  gives a SHA1 sum of the value with "mailto:" prepended. (See above)
mediawiki
  converts a string to the legal wikipedia name for it (first letter uppercase & turn space to underscore)

fname
  gives the original heading of the field, not the santised one used in the tag name.
ftag
  as for fname, but then applies the 'tag' conversion described above.
